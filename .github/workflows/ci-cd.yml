name: Super Todo System CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Check lock file
      run: |
        if [ -f "pnpm-lock.yaml" ]; then
          echo "pnpm-lock.yaml exists"
          ls -la pnpm-lock.yaml
        else
          echo "pnpm-lock.yaml does not exist"
          echo "Creating a new lock file"
          pnpm install --no-strict-peer-dependencies
        fi
    
    - name: Install dependencies
      run: pnpm install --no-strict-peer-dependencies --prefer-offline
    
    - name: Ensure ESLint version
      run: pnpm add -D eslint@8.56.0
    
    - name: Fix ESLint config
      run: |
        if [ -f "eslint.config.js" ]; then
          echo "Removing eslint.config.js to use .eslintrc.js instead"
          rm eslint.config.js
        fi
        if [ -f ".eslintrc.js" ]; then
          echo ".eslintrc.js exists"
          cat .eslintrc.js
        else
          echo ".eslintrc.js does not exist"
        fi
    
    - name: Format code
      run: pnpm run format
    
    - name: Lint
      run: pnpm run lint
    
    # Các bước test và deploy đã được tạm thời bỏ qua
    # Có thể bỏ comment các bước này khi cần chạy test và deploy
    
    # - name: Build
    #   run: pnpm run build
    
    # - name: Test
    #   run: pnpm run test
    
    # - name: E2E Tests
    #   run: pnpm run test:e2e
  
  # deploy:
  #   needs: lint-and-format
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '18'
    
  #   - name: Install Railway CLI
  #     run: npm install -g @railway/cli
    
  #   - name: Deploy to Railway
  #     run: railway up
  #     env:
  #       RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} 